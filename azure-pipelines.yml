# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '2.2.300'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    projects: |       
      src/SSLEngine.Abstraction/SSLEngine.Abstraction.csproj
        src/SSLEngine.Core/SSLEngine.Core.csproj
        src/SSLEngine.Domain/SSLEngine.Domain.csproj
        src/SSLEngine.Linux/SSLEngine.Linux.csproj
        src/SSLEngine.OSX/SSLEngine.OSX.csproj
        src/SSLEngine.Windows/SSLEngine.Windows.csproj
        tests/SSLEngine.Tests.Functionality/SSLEngine.Tests.Functionality.csproj
    verbosityRestore: 'Quiet'


- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    projects: | 
      src/SSLEngine.Abstraction/SSLEngine.Abstraction.csproj
        src/SSLEngine.Core/SSLEngine.Core.csproj
        src/SSLEngine.Domain/SSLEngine.Domain.csproj
        src/SSLEngine.Linux/SSLEngine.Linux.csproj
        src/SSLEngine.OSX/SSLEngine.OSX.csproj
        src/SSLEngine.Windows/SSLEngine.Windows.csproj
        tests/SSLEngine.Tests.Functionality/SSLEngine.Tests.Functionality.csproj
    arguments: '-c $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Abstraction'
  inputs:
    command: 'pack'
    packagesToPack: 'src/SSLEngine.Abstraction/SSLEngine.Abstraction.csproj'
    versioningScheme: 'off'
    verbosityPack: 'Quiet'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Core'
  inputs:
    command: 'pack'
    packagesToPack: 'src/SSLEngine.Core/SSLEngine.Core.csproj'
    versioningScheme: 'off'
    verbosityPack: 'Quiet'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Domain'
  inputs:
    command: 'pack'
    packagesToPack: 'src/SSLEngine.Domain/SSLEngine.Domain.csproj'
    versioningScheme: 'off'
    verbosityPack: 'Quiet'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Linux'
  inputs:
    command: 'pack'
    packagesToPack: 'src/SSLEngine.Linux/SSLEngine.Linux.csproj'
    versioningScheme: 'off'
    verbosityPack: 'Quiet'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack OSX'
  inputs:
    command: 'pack'
    packagesToPack: 'src/SSLEngine.OSX/SSLEngine.OSX.csproj'
    versioningScheme: 'off'
    verbosityPack: 'Quiet'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Windows'
  inputs:
    command: 'pack'
    packagesToPack: 'src/SSLEngine.Windows/SSLEngine.Windows.csproj'
    versioningScheme: 'off'
    verbosityPack: 'Quiet'

- task: VSTest@2
  displayName: 'dotnet run tests'
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: 'tests\SSLEngine.Tests.Functionality\bin\$(BuildConfiguration)\netcoreapp2.2\SSLEngine.Tests.Functionality.dll'
    searchFolder: '$(System.DefaultWorkingDirectory)'
    vsTestVersion: '16.0'
    runInParallel: true
    rerunFailedTests: false

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

